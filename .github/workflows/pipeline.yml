name: pipeline

on:
  push:
    branches: ['experimental']

jobs:
  editorconfig:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: check if editorconfig exists
        if: ${{ hashFiles('.editorconfig') == '' }}
        run: exit 'editorconfig does not exist.'

      - name: Add checker
        uses: editorconfig-checker/action-editorconfig-checker@main

      - name: Run checker
        run: editorconfig-checker

  pylint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        working-directory: ./app
        run: pip install pylint -r requirements.txt

      - name: Run pylint
        run: pylint --disable=all --enable=unused-import $(git ls-files 'app/*.py')

  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Python linter - black
        uses: psf/black@stable

  markdown:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run markdown linter
        uses: nosborn/github-action-markdown-cli@v3.3.0
        with:
          files: README.md

  tests:
    runs-on: ubuntu-latest
    needs: [editorconfig, pylint, black, markdown]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        working-directory: ./app
        run: pip install -r requirements.txt

      - name: Run tests
        working-directory: ./app
        run: python -m unittest app_test.py

  security:
    name: gitleaks
    needs: [tests, code-smells]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ github.token }}

  code-smells:
    name: SonarCloud
    needs: [editorconfig, pylint, black, markdown]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  review-security-issues:
    name: Snyk
    needs: [tests, code-smells]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: snyk/actions/python-3.10@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=critical

  build-and-push:
    runs-on: ubuntu-latest
    needs: [security, review-security-issues]
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          load: true

      - name: Scan image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.build.outputs.imageid }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: dvdty/github-actions-practice:${{ github.sha }}
