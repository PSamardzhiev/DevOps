name: Practice

on:
  push:
    branches:
      - HWL8-Practice

jobs:
  editorconfig:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ["3.X"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install black
          pip install -r './L4-Docker-pt2/requirements.txt'
      
      - name: Run EditorConfig Checker
        uses: editorconfig-checker/action-editorconfig-checker@main
      
      - name: Analyzing the code with pylint
        run: |
          pylint --rcfile='./L4-Docker-pt2/pylintrc' $(git ls-files './L4-Docker-pt2/app')

      - name: Lint with Markdown-lint
        uses: articulate/actions-markdownlint@v1
        with:
          files: './L8-Practice/*.md'
          ignore: node_modules
          version: 0.28.1

      - name: Execute unit-test
        run: |
          cd './L4-Docker-pt2/app/'
          python -m unittest app_test.py
  
  git-leaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  code-smells:
    name: SAST test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: AppThreat/sast-scan-action@master
        with:
          type: "python"


  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          load: true

      - name: Scan image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ steps.build.outputs.imageid }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}




  
